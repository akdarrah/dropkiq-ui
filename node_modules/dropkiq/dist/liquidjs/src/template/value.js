"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const expression_1=require("../render/expression"),filter_1=require("./filter/filter");class Value{constructor(e,t){this.filters=[];const s=Value.tokenize(e);this.strictFilters=t,this.initial=s[0],this.parseFilters(s,1)}parseFilters(e,t){let s=t;for(;s<e.length;){if("|"!==e[s]){s++;continue}const t=++s;for(;s<e.length&&"|"!==e[s];)s++;this.parseFilter(e,t,s)}}parseFilter(e,t,s){const i=e[t],r=[];let l,o;for(let i=t+1;i<s+1;i++)i===s||","===e[i]?((l||o)&&r.push(l?[l,o]:o),o=l=void 0):":"===e[i]?(l=o,o=void 0):void 0===o&&(o=e[i]);this.filters.push(new filter_1.Filter(i,r,this.strictFilters))}*value(e){let t=yield new expression_1.Expression(this.initial).evaluate(e);for(const s of this.filters)t=yield s.render(t,e);return t}static tokenize(e){const t=[];let s=0;for(;s<e.length;){const i=e[s];if('"'===i||"'"===i){const r=s;for(s+=2;s<e.length&&e[s-1]!==i;++s);t.push(e.slice(r,s))}else if(/\s/.test(i))s++;else if(/[|,:]/.test(i))t.push(e[s++]);else{const i=s++;let r;for(;s<e.length&&!/[|,:\s]/.test(r=e[s]);++s)if('"'===r||"'"===r)for(s+=2;s<e.length&&e[s-1]!==r;++s);t.push(e.slice(i,s))}}return t}}exports.Value=Value;