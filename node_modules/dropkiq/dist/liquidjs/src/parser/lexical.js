"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const singleQuoted=/'[^']*'/,doubleQuoted=/"[^"]*"/;function isRange(e){return exports.rangeLine.test(e)}exports.quoted=new RegExp(`${singleQuoted.source}|${doubleQuoted.source}`),exports.quoteBalanced=new RegExp(`(?:${exports.quoted.source}|[^'"])*`),exports.number=/[+-]?(?:\d+\.?\d*|\.?\d+)/,exports.bool=/true|false/,exports.identifier=/[\w-]+[?]?/,exports.subscript=new RegExp(`\\[(?:${exports.quoted.source}|[\\w-\\.]+)\\]`),exports.literal=new RegExp(`(?:${exports.quoted.source}|${exports.bool.source}|${exports.number.source})`),exports.variable=new RegExp(`${exports.identifier.source}(?:\\.${exports.identifier.source}|${exports.subscript.source})*`),exports.rangeLimit=new RegExp(`(?:${exports.variable.source}|${exports.number.source})`),exports.range=new RegExp(`\\(${exports.rangeLimit.source}\\.\\.${exports.rangeLimit.source}\\)`),exports.rangeCapture=new RegExp(`\\((${exports.rangeLimit.source})\\.\\.(${exports.rangeLimit.source})\\)`),exports.value=new RegExp(`(?:${exports.variable.source}|${exports.literal.source}|${exports.range.source})`),exports.hash=new RegExp(`(?:${exports.identifier.source})\\s*:\\s*(?:${exports.value.source})`),exports.hashCapture=new RegExp(`(${exports.identifier.source})\\s*:\\s*(${exports.value.source})`,"g"),exports.tagLine=new RegExp(`^\\s*(${exports.identifier.source})\\s*([\\s\\S]*?)\\s*$`),exports.numberLine=new RegExp(`^${exports.number.source}$`),exports.boolLine=new RegExp(`^${exports.bool.source}$`,"i"),exports.quotedLine=new RegExp(`^${exports.quoted.source}$`),exports.rangeLine=new RegExp(`^${exports.rangeCapture.source}$`),exports.operators=[/\s+or\s+/,/\s+and\s+/,/==|!=|<=|>=|<|>|\s+contains\s+/],exports.isRange=isRange;