import { Value } from './value';
import { Template } from '../template/template';
import { ITemplate } from '../template/itemplate';
import { Context } from '../context/context';
import { Emitter } from '../render/emitter';
import { OutputToken } from '../parser/output-token';
export declare class Output extends Template<OutputToken> implements ITemplate {
    value: Value;
    constructor(token: OutputToken, strictFilters: boolean);
    render(ctx: Context, emitter: Emitter): Generator<Generator<Generator<string | number | boolean | object, any, any>, any, any>, void, unknown>;
}
