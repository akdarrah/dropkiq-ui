import { ITemplate } from './liquidjs/src/template/itemplate';
import { Token } from './liquidjs/src/parser/token';
import { DataSchema } from './DataSchema';
import { Authorizer } from './Authorizer';
export declare class OutputAnalyzer {
    private templates;
    private caretToken;
    private caretLiquidPosition;
    private dataSchema;
    private rawText;
    private leftCaretText;
    private rightCaretText;
    private livePreviewer;
    private authorizer;
    private suggestionFilter;
    constructor(templates: ITemplate[], caretToken: Token, caretLiquidPosition: number, dataSchema: DataSchema, authorizer: Authorizer, suggestionFilter?: Function);
    analyze(): object;
    private canMakeSuggestion;
    private cursorIsInBraces;
    private cursorIsLeftOfFilters;
    private pastRightMostPeriod;
    private rightCharacterIsEligible;
    private spaceExistsAfterContent;
    private getPathFromRawText;
    private filterResults;
    private getContextWithScopeOptions;
    private nameWithoutPrefix;
    private iconImageURLForSuggestion;
}
